@model TicTacToe.Services.Computer.Contracts.GameStateDto

@{
Layout = "_Layout";
}

<div class="container mt-5">
    <div class="text-center">
        <h2>Play with Computer</h2>

        <div class="text-center mt-4 mb-2">
            <a href="/TicTacToe/NewGame" class="btn btn-success me-2">New Game</a>
            <a asp-controller="Leaderboard" asp-action="Index" class="btn btn-info">Leaderboard</a>
        </div>

        <div class="d-flex justify-content-center">
            <div id="game-grid" class="grid" style="display: grid; grid-template-columns: repeat(3, 100px); gap: 5px;">
                @for (int i = 0; i < 9; i++)
                {
                <div class="cell border border-dark d-flex align-items-center justify-content-center"
                     data-index="@i"
                     style="width: 100px; height: 100px; font-size: 2rem; cursor: pointer;">
                    <span></span>
                </div>
                }
            </div>
        </div>

        <div id="game-status" class="mt-3"></div>

        <a asp-controller="Home" asp-action="Index" class="btn btn-outline-secondary mt-3">Back to Home</a>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const cells = document.querySelectorAll('.cell');
        let gameState = {
            board: new Array(9).fill(null),
            currentPlayer: 'X',
            gameOver: false,
            winner: null,
            lastMoveIndex: null
        };

        cells.forEach(cell => {
            cell.addEventListener('click', () => {
                if (gameState.gameOver) return;

                const index = cell.getAttribute('data-index');
                if (gameState.board[index]) return;

                // Player's move
                cell.querySelector('span').textContent = 'X';
                gameState.board[index] = 'X';
                gameState.lastMoveIndex = parseInt(index);

                // Send move to server
                fetch('/computer/move', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(gameState)
                })
                    .then(response => response.json())
                    .then(updatedState => {
                        gameState = updatedState;
                        updateBoard(updatedState);
                        handleGameStatus(updatedState);
                    });
            });
        });

        function updateBoard(state) {
            state.board.forEach((value, index) => {
                if (value) {
                    cells[index].querySelector('span').textContent = value;
                }
            });
        }

        function handleGameStatus(state) {
            const statusElement = document.getElementById('game-status');
            if (state.gameOver) {
                if (state.winner) {
                    statusElement.textContent = `${state.winner} wins!`;
                } else {
                    statusElement.textContent = 'Draw!';
                }
            }
        }
    });
</script>